<UserControl x:Class="EEPK_Organiser.View.MaterialsEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:EEPK_Organiser.View"
             xmlns:vector="clr-namespace:EEPK_Organiser.View.Vectors"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:lbUtils="clr-namespace:LB_Common.Utils;assembly=LB_Common"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="820" Name="UserControl">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="320"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- Search Bar-->
        <StackPanel Grid.Row="0" Grid.Column="1">

            <TextBox VerticalContentAlignment="Center" HorizontalAlignment="Right" Height="23" Margin="0,0,0,0" TextWrapping="Wrap" Text="{Binding ElementName=UserControl, Path=SearchFilter, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="250" Controls:TextBoxHelper.Watermark="Search..." Controls:TextBoxHelper.ButtonCommand="{Binding ElementName=UserControl, Path=ClearSearchCommand}" Controls:TextBoxHelper.ClearTextButton="True">
                
            </TextBox>
        </StackPanel>
        
        <!-- Buttons -->
        <StackPanel Grid.Column="0" Grid.Row="1">
            <StackPanel.Resources>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Margin" Value="0,5,0,0"/>
                </Style>
            </StackPanel.Resources>
            <StackPanel VerticalAlignment="Center">
                <Button Command="{Binding ElementName=UserControl, Path=AddNewMaterialCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource MahApps.Styles.Button.Circle}" Width="25" Height="25">
                    <iconPacks:PackIconMaterialLight Kind="Plus" />
                </Button>
                <TextBlock Text="New" HorizontalAlignment="Center" FontSize="8"/>
            </StackPanel>
            <StackPanel VerticalAlignment="Center">
                <Button Command="{Binding ElementName=UserControl, Path=DeleteMaterialCommand}" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource MahApps.Styles.Button.Circle}" Width="25" Height="25">
                    <iconPacks:PackIconMaterialLight Kind="Delete" />
                </Button>
                <TextBlock Text="Delete" HorizontalAlignment="Center" FontSize="8"/>
            </StackPanel>
            <Separator/>
            <!-- Currently this menu is only useful for container type EMMs, so it will be hidden for everything else. -->
            <StackPanel VerticalAlignment="Center" Visibility="{Binding ElementName=UserControl, Path=ContainerVisiblility}" >
                <Button HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource MahApps.Styles.Button.Circle}" Width="25" Height="25" lbUtils:ContextMenuLeftClickBehavior.IsLeftClickEnabled="True">
                    <iconPacks:PackIconModern Kind="Tools" Width="13" Height="13"/>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Merge Duplicates" Command="{Binding MergeDuplicatesCommand}" Visibility="{Binding ElementName=UserControl, Path=ContainerVisiblility}" IsEnabled="{Binding ElementName=UserControl, Path=IsForContainer}"/>
                            <MenuItem Header="Remove Unusued" Command="{Binding RemoveUnusedMaterialsCommand}" Visibility="{Binding ElementName=UserControl, Path=ContainerVisiblility}" IsEnabled="{Binding ElementName=UserControl, Path=IsForContainer}"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <TextBlock Text="Tools" HorizontalAlignment="Center" FontSize="8"/>
            </StackPanel>
            

        </StackPanel>
        
        <!-- Material selection -->
        <Grid Grid.Column="1" Grid.Row="1">
            <DataGrid x:Name="materialDataGrid" Style="{StaticResource MahApps.Styles.DataGrid.Azure}" ItemsSource="{Binding ElementName=UserControl, Path=ViewMaterials}" SelectedItem="{Binding ElementName=UserControl, Path=SelectedMaterial}" Controls:ControlsHelper.ContentCharacterCasing="Normal" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="New" Command="{Binding AddNewMaterialCommand}"/>
                        <MenuItem Header="Duplicate" Command="{Binding DuplicateMaterialCommand}"/>
                        <MenuItem Header="Delete" Command="{Binding DeleteMaterialCommand}"/>
                        <MenuItem Header="Copy" Command="{Binding CopyMaterialCommand}"/>
                        <MenuItem Header="Paste" Command="{Binding PasteMaterialCommand}"/>
                        <MenuItem Header="Paste Values" Command="{Binding PasteMaterialValuesCommand}"/>
                        <Separator/>
                        <MenuItem Header="Merge" Command="{Binding MergeMaterialCommand}" IsEnabled="{Binding IsForContainer}" Visibility="{Binding ContainerVisiblility}"/>
                        <MenuItem Header="Used By?" Command="{Binding UsedByCommand}" IsEnabled="{Binding IsForContainer}" Visibility="{Binding ContainerVisiblility}"/>
                        <Separator/>
                        <MenuItem Header="Hue Shift" Command="{Binding HueShiftCommand}"/>
                        <MenuItem Header="Hue Set" Command="{Binding HueSetCommand}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Name" Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding ElementName=UserControl, Path=SelectedMaterialName, UpdateSourceTrigger=Default}" MaxLength="32"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Shader" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ShaderProgram}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding ElementName=UserControl, Path=SelectedMaterialShaderProgram, UpdateSourceTrigger=Default}" MaxLength="32"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    
        <!-- Parameters-->
        <Grid Grid.Column="3" Grid.Row="1" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=UserControl, Path=ParameterEditorEnabled}" DataContext="{Binding ElementName=UserControl}" MaxWidth="1000">
            <StackPanel>
                <Expander x:Name="scaleOffsetExpander" Header="Scale/Offset" IsExpanded="True" HorizontalAlignment="Left" MinWidth="450">
                    <StackPanel>
                        <WrapPanel>
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MatScale0"/>
                                <vector:CustomVector4 Grid.Column="1" Value="{Binding MaterialViewModel.MatScale0}"/>
                            </Grid>
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MatScale1"/>
                                <vector:CustomVector4 Grid.Column="1" Value="{Binding MaterialViewModel.MatScale1}"/>
                            </Grid>

                        </WrapPanel>
                        <WrapPanel>

                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MatOffset0"/>
                                <vector:CustomVector4 Grid.Column="1" Value="{Binding MaterialViewModel.MatOffset0}"/>
                            </Grid>
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MatOffset1"/>
                                <vector:CustomVector4 Grid.Column="3" Value="{Binding MaterialViewModel.MatOffset1}"/>
                            </Grid>
                        </WrapPanel>

                    </StackPanel>
                </Expander>

                <Expander x:Name="colorExpander" Header="Color" IsExpanded="True" HorizontalAlignment="Left" MinWidth="450">
                    <StackPanel>
                        <StackPanel HorizontalAlignment="Left">
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Glare"/>
                                <Controls:NumericUpDown Grid.Column="1" Value="{Binding MaterialViewModel.Glare}" Width="130" HorizontalAlignment="Left"/>
                            </Grid>
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="GlareCol"/>
                                <vector:CustomColor Grid.Column="1" Value="{Binding MaterialViewModel.GlareCol}"/>
                            </Grid>
                        </StackPanel>

                        <WrapPanel>
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MatCol0"/>
                                <vector:CustomColor Grid.Column="1" Value="{Binding MaterialViewModel.MatCol0}" Width="350"/>
                            </Grid>
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MatCol1"/>
                                <vector:CustomColor Grid.Column="1" Value="{Binding MaterialViewModel.MatCol1}"/>
                            </Grid>
                        </WrapPanel>
                        <WrapPanel>
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MatCol2"/>
                                <vector:CustomColor Grid.Column="1" Value="{Binding MaterialViewModel.MatCol2}"/>
                            </Grid>
                            <Grid Margin="3,3" Width="450">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="MatCol3"/>
                                <vector:CustomColor Grid.Column="1" Value="{Binding MaterialViewModel.MatCol3}"/>
                            </Grid>
                        </WrapPanel>
                    </StackPanel>

                </Expander>
            
            </StackPanel>
        </Grid>

    </Grid>
</UserControl>
